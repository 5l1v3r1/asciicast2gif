#!/usr/bin/env bash

set -e

export DEBUG=${DEBUG:-0}

a2gif_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if ! type "node" >/dev/null 2>&1; then
    echo "error: Node.js not installed? Executable 'node' not found"
    exit 1
fi

if ! type "convert" >/dev/null 2>&1; then
    echo "error: ImageMagick not installed? Executable 'convert' not found"
    exit 1
fi

if ! type "gifsicle" >/dev/null 2>&1; then
    echo "error: gifsicle not installed? Executable 'gifsicle' not found"
    exit 1
fi

if [[ ! -f "${a2gif_dir}/main.js" ]]; then
    echo "error: ${a2gif_dir}/main.js not found. Build it with: lein cljsbuild once main"
    exit 1
fi

if [[ ! -f "${a2gif_dir}/page/page.js" ]]; then
    echo "error: ${a2gif_dir}/page/page.js not found. Build it with: lein cljsbuild once page"
    exit 1
fi

theme="asciinema"
speed=1
scale=2
width=""
height=""

while getopts ":w:h:t:s:S:" opt; do
    case $opt in
        t)
            theme=$OPTARG
            ;;
        s)
            speed=$OPTARG
            ;;
        S)
            scale=$OPTARG
            ;;
        w)
            width=$OPTARG
            ;;
        h)
            height=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

if (($# != 2)); then
    echo "usage: a2gif [-t theme] [-s speed] [-S scale] [-w columns] [-h rows] <input-json-path-or-url> <output-gif-path>"
    exit 1
fi

if [[ -n $width ]]; then
    export WIDTH=$width
fi

if [[ -n $height ]]; then
    export HEIGHT=$height
fi

tmp_dir=$(mktemp -d 2>/dev/null || mktemp -d -t 'a2gif-tmp')
trap 'rm -rf $tmp_dir' EXIT

node \
    $NODE_OPTS \
    "${a2gif_dir}/main.js" \
    "${1}" \
    "${2}" \
    "${tmp_dir}" \
    $theme \
    $speed \
    $scale

echo -e "\x1b[32m==> \x1b[0mDone."
